@startuml

class Graph {
  Node[] nodes;
  Edge[] edges;
'  GraphProperty can transfer for different renderer
  GraphProperty property;
}

class Node {
  String       id;
  String       label;
  TextStyle    labelStyle;
  Shape        shape;
  Property     property;
  Node[]       children;
  Node         parent;
}

class TextStyle {
  String text;
  String fontName;
  int    fontSize;
  String fontStyle;
  String color;
}

class Edge {
  Point[] points;
  String  edgeType;
}

class Point {
  int x;
  int y;
}

Position --|> Point

class Position {

}

class Geometry {
  int size;
  Position position;
}

Geometry::position --> Position

Graph --> Node
Graph --> Edge
Node --> Shape
Node --> Geometry

interface Shape {
  String type;
}

Shape  <|-- Rectangle
Shape  <|-- Hexagon
Shape  <|-- Circle
Shape  <|-- Ellipse

interface Property {
  String strokeColor;
  Int    strokeWidth;

  Int    fillWidth;
  String fillStroke;
  String fillOpacity;

  Int    scale;
}

GraphProperty --|> Property
NodeProperty --|> Property


interface LayoutStrategy {
  String name;
}

LayoutStrategy  <|-- Dagre
LayoutStrategy  <|-- CoSE
LayoutStrategy  <|-- Circle


Edge  <|-- Arrow
Edge  <|-- Connector
Edge  <|-- Polyline


interface Renderer {
  String name;
  LayoutOptions layoutOptions;

  + void configure(LayoutOptions layoutOptions);
  + void drawing(Graph graph);
}

SvgRenderer --|> Renderer
CanvasRenderer --|> Renderer

@enduml
